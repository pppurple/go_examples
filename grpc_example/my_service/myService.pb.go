// Code generated by protoc-gen-go. DO NOT EDIT.
// source: myService.proto

/*
Package exampleGrpc is a generated protocol buffer package.

It is generated from these files:
	myService.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
	Person
*/
package exampleGrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Person_Country int32

const (
	Person_AMERICA Person_Country = 0
	Person_JAPAN   Person_Country = 1
	Person_CANADA  Person_Country = 2
)

var Person_Country_name = map[int32]string{
	0: "AMERICA",
	1: "JAPAN",
	2: "CANADA",
}
var Person_Country_value = map[string]int32{
	"AMERICA": 0,
	"JAPAN":   1,
	"CANADA":  2,
}

func (x Person_Country) String() string {
	return proto.EnumName(Person_Country_name, int32(x))
}
func (Person_Country) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type SearchRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	People []*Person `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchResponse) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

type Person struct {
	Name    string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age     int32          `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Country Person_Country `protobuf:"varint,3,opt,name=country,enum=exampleGrpc.Person_Country" json:"country,omitempty"`
	Hobby   string         `protobuf:"bytes,4,opt,name=hobby" json:"hobby,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetCountry() Person_Country {
	if m != nil {
		return m.Country
	}
	return Person_AMERICA
}

func (m *Person) GetHobby() string {
	if m != nil {
		return m.Hobby
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "exampleGrpc.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "exampleGrpc.SearchResponse")
	proto.RegisterType((*Person)(nil), "exampleGrpc.Person")
	proto.RegisterEnum("exampleGrpc.Person_Country", Person_Country_name, Person_Country_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PeopleService service

type PeopleServiceClient interface {
	SearchByName(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type peopleServiceClient struct {
	cc *grpc.ClientConn
}

func NewPeopleServiceClient(cc *grpc.ClientConn) PeopleServiceClient {
	return &peopleServiceClient{cc}
}

func (c *peopleServiceClient) SearchByName(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/exampleGrpc.PeopleService/SearchByName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PeopleService service

type PeopleServiceServer interface {
	SearchByName(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterPeopleServiceServer(s *grpc.Server, srv PeopleServiceServer) {
	s.RegisterService(&_PeopleService_serviceDesc, srv)
}

func _PeopleService_SearchByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).SearchByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exampleGrpc.PeopleService/SearchByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).SearchByName(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PeopleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exampleGrpc.PeopleService",
	HandlerType: (*PeopleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchByName",
			Handler:    _PeopleService_SearchByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "myService.proto",
}

func init() { proto.RegisterFile("myService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x6b, 0xf2, 0x40,
	0x10, 0xc6, 0x5d, 0xff, 0x44, 0x1c, 0x5f, 0x7d, 0xc3, 0xb6, 0x87, 0xa0, 0x97, 0x34, 0x50, 0x08,
	0x94, 0xe6, 0x60, 0xe9, 0xb1, 0x87, 0xd5, 0x96, 0x62, 0xa1, 0x12, 0xd6, 0x9b, 0xb7, 0x64, 0x19,
	0xb4, 0x60, 0xb2, 0xeb, 0x26, 0x29, 0xcd, 0x57, 0xea, 0xa7, 0x2c, 0xc9, 0x26, 0xa0, 0xe0, 0x6d,
	0x26, 0xf9, 0xf1, 0xf0, 0xdb, 0x67, 0xe0, 0x7f, 0x52, 0x6e, 0x51, 0x7f, 0x7f, 0x09, 0x0c, 0x94,
	0x96, 0xb9, 0xa4, 0x63, 0xfc, 0x89, 0x12, 0x75, 0xc4, 0x77, 0xad, 0x84, 0x77, 0x0f, 0x93, 0x2d,
	0x46, 0x5a, 0x1c, 0x38, 0x9e, 0x0a, 0xcc, 0x72, 0x7a, 0x0b, 0x83, 0x53, 0x81, 0xba, 0x74, 0x88,
	0x4b, 0xfc, 0x11, 0x37, 0x8b, 0xf7, 0x02, 0xd3, 0x16, 0xcb, 0x94, 0x4c, 0x33, 0xa4, 0x0f, 0x60,
	0x29, 0x94, 0xea, 0x88, 0x0e, 0x71, 0x7b, 0xfe, 0x78, 0x71, 0x13, 0x9c, 0xc5, 0x06, 0x21, 0xea,
	0x4c, 0xa6, 0xbc, 0x41, 0xbc, 0x5f, 0x02, 0x96, 0xf9, 0x44, 0x29, 0xf4, 0xd3, 0x28, 0xc1, 0x26,
	0xbe, 0x9e, 0xa9, 0x0d, 0xbd, 0x68, 0x8f, 0x4e, 0xd7, 0x25, 0xfe, 0x80, 0x57, 0x23, 0x7d, 0x86,
	0xa1, 0x90, 0x45, 0x9a, 0xeb, 0xd2, 0xe9, 0xb9, 0xc4, 0x9f, 0x2e, 0xe6, 0x57, 0xe2, 0x83, 0x95,
	0x41, 0x78, 0xcb, 0x56, 0xf2, 0x07, 0x19, 0xc7, 0xa5, 0xd3, 0x37, 0xf2, 0xf5, 0xe2, 0x3d, 0xc2,
	0xb0, 0x21, 0xe9, 0x18, 0x86, 0xec, 0xf3, 0x8d, 0xaf, 0x57, 0xcc, 0xee, 0xd0, 0x11, 0x0c, 0x3e,
	0x58, 0xc8, 0x36, 0x36, 0xa1, 0x00, 0xd6, 0x8a, 0x6d, 0xd8, 0x2b, 0xb3, 0xbb, 0x8b, 0x1d, 0x4c,
	0xc2, 0x5a, 0xbb, 0xa9, 0x8d, 0xae, 0xe1, 0x9f, 0x79, 0xfc, 0xb2, 0xdc, 0x54, 0xba, 0xb3, 0x0b,
	0x97, 0x8b, 0xfa, 0x66, 0xf3, 0xab, 0xff, 0x4c, 0x67, 0x5e, 0x67, 0x79, 0x07, 0xb6, 0x90, 0x49,
	0xcb, 0x04, 0x7b, 0xad, 0x44, 0x48, 0x76, 0xe7, 0x17, 0x89, 0xad, 0xfa, 0x4a, 0x4f, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0x03, 0xd4, 0x89, 0xb8, 0x01, 0x00, 0x00,
}
